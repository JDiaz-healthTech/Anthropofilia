Mejoras para la base de datos y código PHP
-- Evita duplicados de categorías
ALTER TABLE categorias
  ADD UNIQUE KEY uniq_nombre_categoria (nombre_categoria);

-- Evita carreras/duplicados de nombres de etiqueta
ALTER TABLE etiquetas
  ADD UNIQUE KEY uniq_nombre_etiqueta (nombre_etiqueta);

-- Evita duplicar el mismo vínculo post-etiqueta
ALTER TABLE post_etiquetas
  ADD UNIQUE KEY uniq_post_tag (id_post, id_etiqueta);

-- Si puedo usar MySQL 8, haz que el campo sea case- y acento-insensible para evitar “Salud” vs “salúd” vs “salud” como nombres distintos.
  ALTER TABLE categorias
  MODIFY nombre_categoria VARCHAR(191)
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_0900_ai_ci
  NOT NULL;


-- Evita duplicados de posts por título y usuario
ALTER TABLE posts
  ADD UNIQUE KEY uniq_titulo_usuario (titulo, id_usuario);


ALTER TABLE paginas 
  MODIFY slug VARCHAR(191) NOT NULL,
  ADD UNIQUE KEY uniq_paginas_slug (slug);

-- Si usas timestamp de actualización:
ALTER TABLE paginas 
  ADD COLUMN actualizado_en TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP;

  ALTER TABLE posts
  ADD COLUMN actualizado_en TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP;
  SET titulo=?, contenido=?, id_categoria=?, imagen_destacada_url=?, actualizado_en=NOW()


CREATE INDEX idx_posts_fecha_publicacion ON posts (fecha_publicacion);

ALTER TABLE categorias ADD UNIQUE KEY uniq_categorias_slug (slug);
CREATE INDEX idx_posts_cat_fecha ON posts (id_categoria, fecha_publicacion);

ALTER TABLE paginas ADD UNIQUE KEY uq_paginas_slug (slug);

ALTER TABLE etiquetas ADD UNIQUE KEY uq_etiquetas_nombre (nombre_etiqueta);
ALTER TABLE post_etiquetas ADD UNIQUE KEY uq_post_tag (id_post, id_etiqueta);


--------------------------------------------
--------------------------------------------
cargo esto: 

-- ============================================
-- Script de mejoras para la base de datos BlogDB
-- ============================================

-- 1) Asegurar collation consistente (utf8mb4_unicode_ci)
ALTER TABLE categorias 
  MODIFY nombre_categoria VARCHAR(191)
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_unicode_ci NOT NULL,
  MODIFY slug VARCHAR(191) 
  CHARACTER SET utf8mb4 
  COLLATE utf8mb4_unicode_ci NOT NULL;

ALTER TABLE etiquetas 
  MODIFY nombre_etiqueta VARCHAR(191)
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_unicode_ci NOT NULL;

ALTER TABLE paginas 
  MODIFY slug VARCHAR(191) 
  CHARACTER SET utf8mb4 
  COLLATE utf8mb4_unicode_ci NOT NULL;

ALTER TABLE posts 
  MODIFY titulo VARCHAR(255)
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_unicode_ci NOT NULL;

-- 2) Evitar duplicados con claves únicas
ALTER TABLE categorias 
  ADD UNIQUE KEY uq_categorias_nombre (nombre_categoria),
  ADD UNIQUE KEY uq_categorias_slug (slug);

ALTER TABLE etiquetas 
  ADD UNIQUE KEY uq_etiquetas_nombre (nombre_etiqueta);

ALTER TABLE paginas 
  ADD UNIQUE KEY uq_paginas_slug (slug);

ALTER TABLE posts 
  ADD UNIQUE KEY uq_posts_titulo_usuario (titulo, id_usuario);

ALTER TABLE post_etiquetas 
  ADD UNIQUE KEY uq_post_tag (id_post, id_etiqueta);

-- 3) Añadir timestamps de actualización automática
ALTER TABLE paginas 
  ADD COLUMN actualizado_en TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP;

ALTER TABLE posts 
  ADD COLUMN actualizado_en TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP;

-- 4) Índices de rendimiento
CREATE INDEX idx_posts_fecha_publicacion ON posts (fecha_publicacion);
CREATE INDEX idx_posts_cat_fecha ON posts (id_categoria, fecha_publicacion);

-- 5) Integridad referencial ya existente (no tocar si ya está)
-- FOREIGN KEYS: posts.id_categoria -> categorias.id_categoria
--               posts.id_usuario -> usuarios.id_usuario
--               post_etiquetas.id_post -> posts.id_post
--               post_etiquetas.id_etiqueta -> etiquetas.id_etiqueta


-- --------------------------------------------------------
-- Tabla para rate limits (requerida por SecurityManager)
-- --------------------------------------------------------
DROP TABLE IF EXISTS rate_limits;

CREATE TABLE `rate_limits` (
    `id` INT(11) NOT NULL AUTO_INCREMENT,
    `action` VARCHAR(50) NOT NULL,
    `ip` VARBINARY(16) NOT NULL,
    `ts` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `hits` INT(11) NOT NULL DEFAULT 1,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uq_action_ip_ts` (`action`, `ip`, `ts`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;



--------------------------------------
**************************************
--------------------------------------

para hacer "enumeraciones" o "restricciones de valores" en una columna de una tabla puede y debe seguirse el siguiente metodo, usando una tabla auxiliar referenciada desde la principal

CREATE TABLE TipoEstados (
    Codigo CHAR(1) PRIMARY KEY,
    Descripcion VARCHAR(50) NOT NULL
);

INSERT INTO TipoEstados (Codigo, Descripcion) VALUES
('C','Completado'),
('N','Nuevo'),
('P','Pendiente');

ALTER TABLE MiTabla
ADD CONSTRAINT FK_MiTabla_Tipo
FOREIGN KEY (Tipo) REFERENCES TipoEstados(Codigo);


--------------------------------------------
***********************************************
---------------------------------------------------

mejoras para la cita simple en portada. necesitamos tabla

CREATE TABLE ajustes (
  clave VARCHAR(50) PRIMARY KEY,
  valor TEXT NOT NULL
);
INSERT INTO ajustes (clave, valor) VALUES
  ('home_quote_text',''), ('home_quote_author','');


  ---------------------------------------------------
  ////////////////////////////////////////////////////
  ---------------------------------------------------

  ALTER TABLE rate_limits
  ADD COLUMN bucket_start TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DROP INDEX uq_action_ip_ts,
  ADD UNIQUE INDEX uq_action_ip_bucket (action, ip, bucket_start);

-- A partir de aquí, en PHP inserta el bucket redondeado al minuto:
-- $bucket = (new DateTimeImmutable('now'))->setTime((int)date('H'), (int)date('i'), 0)->format('Y-m-d H:i:s');
-- y usa INSERT ... ON DUPLICATE KEY UPDATE hits = hits + 1


---------------------
ALTER TABLE rate_limits
  ADD COLUMN bucket_start TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DROP INDEX uq_action_ip_ts,
  ADD UNIQUE INDEX uq_action_ip_bucket (action, ip, bucket_start);
------------------
CREATE TABLE IF NOT EXISTS settings (
  k VARCHAR(100) PRIMARY KEY,
  v TEXT NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);